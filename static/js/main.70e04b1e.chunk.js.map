{"version":3,"sources":["components/Preview/images/full-screen.svg","components/Landing/images/screen.jpg","components/Landing/images/animation1.gif","components/Landing/images/animation2.gif","components/Landing/images/animation3.gif","components/Landing/images/animation4.gif","components/Landing/images/animation5.gif","serviceWorker.js","utils/utils.js","redux/reducer.js","redux/actionsTypes.js","redux/store.js","components/Login/index.js","components/Login/Login.jsx","components/Header/index.js","components/Header/Header.jsx","redux/actions.js","components/Tool/index.js","components/Tool/Tool.jsx","components/ToolBar/ToolBar.jsx","components/ToolBar/index.js","components/ColorBar/ColorBar.jsx","components/ColorBar/index.js","components/PenSizePanel/PenSizePanel.jsx","components/PenSizePanel/index.js","tools/drawLine.js","tools/drawStrokeLine.js","tools/eraseLine.js","tools/getColor.js","tools/fillAllPixels.js","tools/fill.js","components/Canvas/Canvas.jsx","components/Canvas/index.js","components/Frame/index.js","components/Frame/Frame.jsx","components/Frames/Frames.jsx","components/Frames/index.js","components/Preview/Preview.jsx","components/Preview/index.js","components/PreviewFullscreen/PreviewFullscreen.jsx","components/PreviewFullscreen/index.js","services/saveAsGif.js","services/saveAsApng.js","components/ExportMenu/ExportMenu.jsx","components/ExportMenu/index.js","components/Button/index.js","components/Button/Button.jsx","components/ResizeMenu/ResizeMenu.jsx","components/ResizeMenu/index.js","components/Main/index.js","components/Main/Main.jsx","components/Landing/index.js","components/Landing/Landing.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","rgbaToHex","rgba","slice","reduce","acc","item","component","hex","toString","length","componentToHex","hexToRgba","result","exec","parseInt","getPointPosition","screenX","screenY","pixelSize","canvasPosition","x","Math","floor","y","isEqualPoint","point1","point2","getLinePoints","px","py","xe","ye","i","x1","y1","x2","y2","filledPixels","dx","dy","dx1","abs","dy1","push","drawPixels","context","pointList","forEach","point","fillRect","clearPixels","clearRect","getPixelColor","state","canvasSize","startIndex","createInitialFrameState","size","canvas","document","createElement","width","height","getContext","getImageData","copyFrame","frame","newData","data","ImageData","createInterval","fn","intervalId","clear","clearInterval","start","time","setInterval","clearCanvas","drawFrame","imageData","putImageData","initialState","isOpenFullscreen","currentTool","penSize","mainColor","secondColor","frameRate","currentFrame","frames","reducer","action","type","payload","canvasState","index","newState","isChangeCurrentFrame","newCurrentFrame","newFrame","newFrameState","newCanvas","index1","index2","frame1","frame2","newFrames","createStore","Login","isAuth","responseGoogle","bind","logout","response","name","profileObj","this","setState","user","clientId","render","renderProps","className","onClick","disabled","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","button","Component","Header","href","setMainColor","color","togglePreviewFullscreen","isOpen","Tool","props","tool","clickTool","isActive","ToolBar","tools","key","label","toolName","changeCurrentTool","setCurrentTool","toolBarItems","map","clickHandle","connect","ColorBar","handleChangeMainColor","handleChangeSecondColor","handleClick","event","changeColor","element","currentTarget","value","setSecondColor","swap","swapColors","onChange","mapDispatchToProps","PenSizePanel","penSizes","changePenSize","setPenSize","penSizeItems","eraseLine","startPoint","setCanvasState","prevPoint","onMouseMove","pageX","pageY","linePoints","addEventListener","onMouseUp","removeEventListener","drawStrokeLine","mainContext","drawingContext","getColor","changeMainColor","frameState","selectedColor","every","Array","from","fillAllPixels","changeCanvasState","newColor","r","g","b","opacity","fillAll","newImageData","fill","startColor","pixelStack","matchColors","position","colorPixel","j","reachLeft","reachRight","pop","fillArea","Canvas","mainCanvasRef","React","createRef","drawingCanvasRef","mainCanvas","drawingCanvas","screen","handleMouseDown","current","nextProps","nextCurrentFrame","nextFrames","preventDefault","getBoundingClientRect","fillStyle","drawLine","id","onMouseDown","ref","myRef","onContextMenu","Frame","image","onDelete","onCopy","Frames","onAddFrame","addFrame","swapFrame","dragElement","target","parentNode","style","zIndex","dataset","startY","handleMouseMove","mouseMoveEvent","transform","handleMouseUp","mouseUpEvent","hidden","elementFromPoint","clientX","clientY","classList","contains","changeCurrentFrame","setCurrentFrame","onDeleteFrame","deleteFrame","onCopyFrame","listFrames","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","data-index","Preview","canvasRef","handleChange","showAnimation","previewInterval","activeFrame","changeFrameRate","setFrameRate","toggleFullscreen","src","icon","alt","min","max","step","PreviewFullscreen","fullScrennRef","handleFullScreenChange","requestFullscreen","fullscreenElement","getDataUrls","toDataURL","saveAsGif","interval","fileName","dataUrls","gif","Gif","workers","quality","background","Image","delay","on","blob","saveFile","getArrayBuffers","layer","buffer","getIntervals","saveAsApng","arrayBuffers","intervals","arr","UPNG","encode","ExportMenu","handleClickOnGifButton","handleClickOnApngButton","Button","children","CANVAS_RESOLUTION","setSize","ResizeMenu","resize","Main","Landing","to","animation1","animation2","animation3","animation4","animation5","App","path","rootElement","getElementById","ReactDOM","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70e04b1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/full-screen.b26a844e.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen.d6dca46b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/animation1.c8d39763.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation2.858d709c.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation3.0e6b19d8.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation4.e84dc22e.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation5.ff97186e.gif\";","\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            // eslint-disable-next-line operator-linebreak\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                // eslint-disable-next-line operator-linebreak\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","export const rgbaToHex = (rgba) => {\r\n  const componentToHex = (component) => {\r\n    const hex = component.toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n  };\r\n  const rgb = rgba.slice(0, 3);\r\n  return rgb.reduce((acc, item) => `${acc}${componentToHex(item)}`, '#');\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i.exec(hex);\r\n  return result ? [\r\n    parseInt(result[1], 16),\r\n    parseInt(result[2], 16),\r\n    parseInt(result[3], 16),\r\n    result[4] ? parseInt(result[4], 16) : 255,\r\n  ] : null;\r\n};\r\n\r\nexport const getPointPosition = (screenX, screenY, pixelSize, canvasPosition) => {\r\n  const x = Math.floor((screenX - canvasPosition.x) / pixelSize);\r\n  const y = Math.floor((screenY - canvasPosition.y) / pixelSize);\r\n  return { x, y };\r\n};\r\n\r\nexport const isEqualPoint = (point1, point2) => point1.x === point2.x && point1.y === point2.y;\r\n\r\nexport const getLinePoints = (point1, point2) => {\r\n  const { x: x1, y: y1 } = point1; const { x: x2, y: y2 } = point2;\r\n  let x; let y; let px; let py; let xe; let ye; let i;\r\n  const filledPixels = [];\r\n  const dx = x2 - x1;\r\n  const dy = y2 - y1;\r\n  const dx1 = Math.abs(dx);\r\n  const dy1 = Math.abs(dy);\r\n\r\n  px = 2 * dy1 - dx1;\r\n  py = 2 * dx1 - dy1;\r\n\r\n  if (dy1 <= dx1) {\r\n    if (dx >= 0) {\r\n      x = x1; y = y1; xe = x2;\r\n    } else {\r\n      x = x2; y = y2; xe = x1;\r\n    }\r\n    filledPixels.push({ x, y });\r\n    for (i = 0; x < xe; i += 1) {\r\n      x += 1;\r\n      if (px < 0) {\r\n        px += 2 * dy1;\r\n      } else {\r\n        if ((dx < 0 && dy < 0) || (dx > 0 && dy > 0)) {\r\n          y += 1;\r\n        } else {\r\n          y -= 1;\r\n        }\r\n        px += 2 * (dy1 - dx1);\r\n      }\r\n      filledPixels.push({ x, y });\r\n    }\r\n  } else {\r\n    if (dy >= 0) {\r\n      x = x1; y = y1; ye = y2;\r\n    } else {\r\n      x = x2; y = y2; ye = y1;\r\n    }\r\n    filledPixels.push({ x, y });\r\n    for (i = 0; y < ye; i += 1) {\r\n      y += 1;\r\n      if (py <= 0) {\r\n        py += 2 * dx1;\r\n      } else {\r\n        if ((dx < 0 && dy < 0) || (dx > 0 && dy > 0)) {\r\n          x += 1;\r\n        } else {\r\n          x -= 1;\r\n        }\r\n        py += 2 * (dx1 - dy1);\r\n      }\r\n      filledPixels.push({ x, y });\r\n    }\r\n  }\r\n  return filledPixels;\r\n};\r\n\r\nexport const drawPixels = (context, pointList, pixelSize = 1) => {\r\n  pointList.forEach((point) => {\r\n    const { x, y } = point;\r\n    context.fillRect(x, y, pixelSize, pixelSize);\r\n  });\r\n};\r\n\r\nexport const clearPixels = (context, pointList, pixelSize = 1) => {\r\n  pointList.forEach((point) => {\r\n    const { x, y } = point;\r\n    context.clearRect(x, y, pixelSize, pixelSize);\r\n  });\r\n};\r\n\r\nexport const getPixelColor = (state, point, canvasSize) => {\r\n  const { x, y } = point;\r\n  const startIndex = (y * canvasSize + x) * 4;\r\n  return state.slice(startIndex, startIndex + 4);\r\n};\r\n\r\nexport const fillArea = (canvasState, size, point, startColor, color) => {\r\n  const state = canvasState.slice();\r\n  const [r, g, b] = color;\r\n  const pixelStack = [[point.y, point.x]];\r\n  let newPos;\r\n\r\n  const matchColors = (position) => {\r\n    const r = state[position];\r\n    const g = state[position + 1];\r\n    const b = state[position + 2];\r\n    return r === startColor[0] && g === startColor[1] && b === startColor[2];\r\n  };\r\n\r\n  const colorPixel = (position) => {\r\n    state[position] = r;\r\n    state[position + 1] = g;\r\n    state[position + 2] = b;\r\n    state[position + 3] = 255;\r\n  };\r\n\r\n  while (pixelStack.length) {\r\n    let i; let j; let reachLeft; let reachRight; let position;\r\n    newPos = pixelStack.pop();\r\n    [i, j] = newPos;\r\n    position = (i * size + j) * 4;\r\n    while (i >= 0 && matchColors(position)) {\r\n      position -= size * 4;\r\n      i -= 1;\r\n    }\r\n    position += size * 4;\r\n    i += 1;\r\n    reachLeft = false;\r\n    reachRight = false;\r\n\r\n    while (i < size && matchColors(position)) {\r\n      colorPixel(position);\r\n      if (j > 0) {\r\n        if (matchColors(position - 4)) {\r\n          if (!reachLeft) {\r\n            pixelStack.push([i, j - 1]);\r\n            reachLeft = true;\r\n          }\r\n        } else if (reachLeft) {\r\n          reachLeft = false;\r\n        }\r\n      }\r\n      if (j < size - 1) {\r\n        if (matchColors(position + 4)) {\r\n          if (!reachRight) {\r\n            pixelStack.push([i, j + 1]);\r\n            reachRight = true;\r\n          }\r\n        } else if (reachRight) {\r\n          reachRight = false;\r\n        }\r\n      }\r\n      i += 1;\r\n      position += size * 4;\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const fillAll = (canvasState, color, newColor) => {\r\n  const state = canvasState.slice();\r\n  for (let i = 0; i < state.length; i += 4) {\r\n    const isEqualColors = state[i] === color[0] && state[i + 1] === color[1]\r\n      && state[i + 2] === color[2] && state[i + 3] === color[3];\r\n    if (isEqualColors) {\r\n      const [r, g, b, opacity] = newColor;\r\n      state[i] = r;\r\n      state[i + 1] = g;\r\n      state[i + 2] = b;\r\n      state[i + 3] = opacity;\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const createInitialFrameState = (size) => {\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = size;\r\n  canvas.height = size;\r\n  const context = canvas.getContext('2d');\r\n  const X_STARTING_POINT = 0;\r\n  const Y_STARTING_POINT = 0;\r\n  return context.getImageData(X_STARTING_POINT, Y_STARTING_POINT, size, size);\r\n};\r\n\r\nexport const copyFrame = (frame) => {\r\n  const { width, height, data } = frame;\r\n  const newData = data.slice();\r\n  return new ImageData(newData, width, height);\r\n};\r\n\r\nexport const createInterval = (fn) => {\r\n  let intervalId = null;\r\n  return {\r\n    clear: () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n    },\r\n    start: (time) => {\r\n      intervalId = setInterval(fn, time);\r\n    },\r\n  };\r\n};\r\nexport const clearCanvas = (context, size) => {\r\n  const X_STARTING_POINT = 0;\r\n  const Y_STARTING_POINT = 0;\r\n  context.clearRect(X_STARTING_POINT, Y_STARTING_POINT, size, size);\r\n};\r\n\r\nexport const drawFrame = (context, imageData, size) => {\r\n  context.putImageData(imageData, 0, 0, 0, 0, size, size);\r\n};\r\n","import {\r\n  SET_CURRENT_TOOL,\r\n  SET_MAIN_COLOR,\r\n  SET_SECOND_COLOR,\r\n  SWAP_COLORS,\r\n  SET_PEN_SIZE,\r\n  SET_CANVAS_STATE,\r\n  ADD_FRAME,\r\n  SET_CURRENT_FRAME,\r\n  DELETE_FRAME,\r\n  COPY_FRAME,\r\n  SET_FRAME_RATE,\r\n  TOGGLE_PREVIEW_FULLSCREEN,\r\n  SET_SIZE,\r\n  SWAP_FRAME,\r\n} from './actionsTypes';\r\n\r\nimport { createInitialFrameState, copyFrame } from '../utils/utils';\r\n\r\nconst initialState = {\r\n  isOpenFullscreen: false,\r\n  currentTool: '',\r\n  penSize: 1,\r\n  mainColor: [0, 255, 0, 255],\r\n  secondColor: [255, 128, 64, 255],\r\n  canvas: {\r\n    width: 640,\r\n    height: 640,\r\n    size: 64,\r\n    pixelSize: 10,\r\n  },\r\n  frameRate: 0,\r\n  currentFrame: 0,\r\n  frames: [createInitialFrameState(64)],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_TOOL:\r\n      return { ...state, currentTool: action.payload };\r\n    case SET_PEN_SIZE:\r\n      return { ...state, penSize: action.payload };\r\n    case SET_MAIN_COLOR:\r\n      return { ...state, mainColor: action.payload };\r\n    case SET_SECOND_COLOR:\r\n      return { ...state, secondColor: action.payload };\r\n    case SWAP_COLORS: {\r\n      const { mainColor, secondColor } = state;\r\n      return {\r\n        ...state,\r\n        mainColor: secondColor,\r\n        secondColor: mainColor,\r\n      };\r\n    }\r\n    case SET_CANVAS_STATE: {\r\n      const { canvasState } = action.payload;\r\n      const { frames, currentFrame: index } = state;\r\n      const newState = {\r\n        ...state,\r\n        frames: [...frames.slice(0, index), canvasState, ...frames.slice(index + 1)],\r\n      };\r\n      return newState;\r\n    }\r\n    case ADD_FRAME: {\r\n      const { frames, currentFrame: index } = state;\r\n      return {\r\n        ...state,\r\n        frames: [...frames.slice(0, index + 1), action.payload, ...frames.slice(index + 1)],\r\n        currentFrame: state.currentFrame + 1,\r\n      };\r\n    }\r\n    case SET_CURRENT_FRAME:\r\n      return { ...state, currentFrame: action.payload };\r\n    case DELETE_FRAME: {\r\n      const { frames, currentFrame } = state;\r\n      const index = action.payload;\r\n      const isChangeCurrentFrame = index === frames.length - 1\r\n        || currentFrame === frames.length - 1;\r\n      const newCurrentFrame = isChangeCurrentFrame ? currentFrame - 1 : currentFrame;\r\n      return {\r\n        ...state,\r\n        frames: [...frames.slice(0, index), ...frames.slice(index + 1)],\r\n        currentFrame: newCurrentFrame,\r\n      };\r\n    }\r\n    case COPY_FRAME: {\r\n      const { frames, currentFrame } = state;\r\n      const index = action.payload;\r\n      const newFrame = copyFrame(frames[index]);\r\n      return {\r\n        ...state,\r\n        frames: [...frames.slice(0, index + 1), newFrame, ...frames.slice(index + 1)],\r\n        currentFrame: currentFrame + 1,\r\n      };\r\n    }\r\n    case SET_FRAME_RATE:\r\n      return { ...state, frameRate: action.payload };\r\n    case TOGGLE_PREVIEW_FULLSCREEN:\r\n      return { ...state, isOpenFullscreen: action.payload };\r\n    case SET_SIZE: {\r\n      const { canvas } = state;\r\n      const newFrameState = createInitialFrameState(action.payload);\r\n      const pixelSize = canvas.width / action.payload;\r\n      const newCanvas = { ...canvas, pixelSize, size: action.payload };\r\n      return {\r\n        ...state, canvas: newCanvas, frames: [newFrameState], currentFrame: 0,\r\n      };\r\n    }\r\n    case SWAP_FRAME: {\r\n      const { frames } = state;\r\n      const { index1, index2 } = action.payload;\r\n      const frame1 = frames[index1];\r\n      const frame2 = frames[index2];\r\n      const newFrames = frames.slice();\r\n      newFrames[index1] = frame2;\r\n      newFrames[index2] = frame1;\r\n      return { ...state, frames: newFrames };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const SET_CURRENT_TOOL = 'CHANGE_CURRENT_TOOL';\r\nexport const SET_PEN_SIZE = 'SET_PEN_SIZE';\r\n\r\nexport const SET_MAIN_COLOR = 'SET_MAIN_COLOR';\r\nexport const SET_SECOND_COLOR = 'SET_SECOND_COLOR';\r\nexport const SWAP_COLORS = 'SWAP_COLORS';\r\n\r\nexport const SET_CANVAS_STATE = 'SET_CANVAS_STATE';\r\n\r\nexport const ADD_FRAME = 'ADD_FRAME';\r\nexport const SET_CURRENT_FRAME = 'SET_CURRENT_FRAME';\r\nexport const DELETE_FRAME = 'DELETE_FRAME';\r\nexport const COPY_FRAME = 'COPY_FRAME';\r\nexport const SWAP_FRAME = 'SWAP_FRAME';\r\n\r\nexport const SET_FRAME_RATE = 'SET_FRAME_RATE';\r\nexport const TOGGLE_PREVIEW_FULLSCREEN = 'TOGGLE_PREVIEW_FULLSCREEN';\r\n\r\nexport const SET_SIZE = 'SET_SIZE';\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nexport default createStore(reducer);\r\n","import Login from './Login';\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n\r\nimport './Login.scss';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isAuth: false,\r\n    };\r\n    this.responseGoogle = this.responseGoogle.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  responseGoogle(response) {\r\n    const { profileObj: { name } } = response;\r\n    this.setState({\r\n      isAuth: true,\r\n      user: name,\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.setState({\r\n      isAuth: false,\r\n      user: null,\r\n    });\r\n  }\r\n\r\n  button() {\r\n    const { isAuth } = this.state;\r\n    if (isAuth) {\r\n      return (\r\n        <GoogleLogout\r\n          clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n          render={(renderProps) => (\r\n            <button\r\n              className=\"log-in__button\"\r\n              type=\"button\"\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              Logout\r\n            </button>\r\n          )}\r\n          buttonText=\"Logout\"\r\n          onLogoutSuccess={this.logout}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <GoogleLogin\r\n        clientId=\"236918688577-ebqd0uarejrvpb93t2ha5cai891se6i8.apps.googleusercontent.com\"\r\n        render={(renderProps) => (\r\n          <button\r\n            className=\"log-in__button\"\r\n            type=\"button\"\r\n            onClick={renderProps.onClick}\r\n            disabled={renderProps.disabled}\r\n          >\r\n            Login\r\n          </button>\r\n        )}\r\n        buttonText=\"Login\"\r\n        onSuccess={this.responseGoogle}\r\n        onFailure={this.responseGoogle}\r\n        cookiePolicy=\"single_host_origin\"\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <div className=\"log-in\">\r\n        <p className=\"log-in__user\">{user !== null ? user : ''}</p>\r\n        {this.button()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport Login from '../Login';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"header__body\">\r\n      <a className=\"header__link\" href=\"/\">Piskel-clone</a>\r\n      <Login />\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import {\r\n  SET_CURRENT_TOOL,\r\n  SET_MAIN_COLOR,\r\n  SET_SECOND_COLOR,\r\n  SWAP_COLORS,\r\n  SET_PEN_SIZE,\r\n  SET_CANVAS_STATE,\r\n  ADD_FRAME,\r\n  SET_CURRENT_FRAME,\r\n  DELETE_FRAME,\r\n  COPY_FRAME,\r\n  SET_FRAME_RATE,\r\n  TOGGLE_PREVIEW_FULLSCREEN,\r\n  SET_SIZE,\r\n  SWAP_FRAME,\r\n} from './actionsTypes';\r\n\r\nexport const setCurrentTool = (tool) => (\r\n  {\r\n    type: SET_CURRENT_TOOL,\r\n    payload: tool,\r\n  }\r\n);\r\n\r\nexport const setMainColor = (color) => (\r\n  {\r\n    type: SET_MAIN_COLOR,\r\n    payload: color,\r\n  }\r\n);\r\n\r\nexport const setSecondColor = (color) => (\r\n  {\r\n    type: SET_SECOND_COLOR,\r\n    payload: color,\r\n  }\r\n);\r\n\r\nexport const swapColors = () => (\r\n  {\r\n    type: SWAP_COLORS,\r\n  }\r\n);\r\n\r\nexport const setPenSize = (penSize) => (\r\n  {\r\n    type: SET_PEN_SIZE,\r\n    payload: penSize,\r\n  }\r\n);\r\n\r\nexport const setCanvasState = (props) => (\r\n  {\r\n    type: SET_CANVAS_STATE,\r\n    payload: props,\r\n  }\r\n);\r\n\r\nexport const addFrame = (frame) => (\r\n  {\r\n    type: ADD_FRAME,\r\n    payload: frame,\r\n  }\r\n);\r\n\r\nexport const setCurrentFrame = (index) => (\r\n  {\r\n    type: SET_CURRENT_FRAME,\r\n    payload: index,\r\n  }\r\n);\r\n\r\nexport const deleteFrame = (index) => (\r\n  {\r\n    type: DELETE_FRAME,\r\n    payload: index,\r\n  }\r\n);\r\n\r\nexport const copyFrame = (index) => (\r\n  {\r\n    type: COPY_FRAME,\r\n    payload: index,\r\n  }\r\n);\r\n\r\nexport const setFrameRate = (frameRate) => (\r\n  {\r\n    type: SET_FRAME_RATE,\r\n    payload: frameRate,\r\n  }\r\n);\r\n\r\nexport const togglePreviewFullscreen = (isOpen) => (\r\n  {\r\n    type: TOGGLE_PREVIEW_FULLSCREEN,\r\n    payload: isOpen,\r\n  }\r\n);\r\n\r\nexport const setSize = (size) => (\r\n  {\r\n    type: SET_SIZE,\r\n    payload: size,\r\n  }\r\n);\r\n\r\nexport const swapFrame = (index1, index2) => (\r\n  {\r\n    type: SWAP_FRAME,\r\n    payload: { index1, index2 },\r\n  }\r\n);\r\n","import Tool from './Tool';\r\n\r\nexport default Tool;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Tool = (props) => {\r\n  const { tool, clickTool, isActive } = props;\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={`tool tool--${tool.name} ${isActive ? 'tool--active' : ''}`}\r\n      onClick={clickTool}\r\n    >\r\n      {}\r\n    </button>\r\n  );\r\n};\r\n\r\nTool.propTypes = {\r\n  isActive: PropTypes.bool.isRequired,\r\n  tool: PropTypes.shape().isRequired,\r\n  clickTool: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Tool;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { setCurrentTool } from '../../redux/actions';\r\nimport Tool from '../Tool';\r\n\r\nimport './ToolBar.scss';\r\n\r\nclass ToolBar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.tools = [\r\n      { name: 'pen', key: 'p', label: 'Pen tool' },\r\n      { name: 'line', key: 'l', label: 'Stroke tool' },\r\n      { name: 'fill', key: 'b', label: 'Paint backet tool' },\r\n      { name: 'fill-all', key: 'f', label: 'Paint all pixels' },\r\n      { name: 'eraser', key: 'e', label: 'Erser tool' },\r\n      { name: 'pipette', key: 'c', label: 'Color picker' },\r\n    ];\r\n  }\r\n\r\n  clickHandle(toolName) {\r\n    const { setCurrentTool: changeCurrentTool } = this.props;\r\n    changeCurrentTool(toolName);\r\n  }\r\n\r\n  render() {\r\n    const { currentTool } = this.props;\r\n    const toolBarItems = this.tools.map((tool, index) => (\r\n      // eslint-disable-next-line react/no-array-index-key\r\n      <li key={index} className=\"tool-bar__item\">\r\n        <Tool\r\n          tool={tool}\r\n          isActive={tool.name === currentTool}\r\n          clickTool={() => { this.clickHandle(tool.name); }}\r\n        />\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"tool-bar\">\r\n        <ul className=\"tool-bar__list\">\r\n          {toolBarItems}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToolBar.propTypes = {\r\n  currentTool: PropTypes.string.isRequired,\r\n  setCurrentTool: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ currentTool }) => ({ currentTool });\r\n\r\nexport default connect(mapStateToProps, { setCurrentTool })(ToolBar);\r\n","import ToolBar from './ToolBar';\r\n\r\nexport default ToolBar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { setMainColor, setSecondColor, swapColors } from '../../redux/actions';\r\nimport { rgbaToHex, hexToRgba } from '../../utils/utils';\r\n\r\nimport './ColorBar.scss';\r\n\r\nclass ColorBar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleChangeMainColor = this.handleChangeMainColor.bind(this);\r\n    this.handleChangeSecondColor = this.handleChangeSecondColor.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChangeMainColor(event) {\r\n    const { setMainColor: changeColor } = this.props;\r\n    const element = event.currentTarget;\r\n    changeColor(hexToRgba(element.value));\r\n  }\r\n\r\n  handleChangeSecondColor(event) {\r\n    const { setSecondColor: changeColor } = this.props;\r\n    const element = event.currentTarget;\r\n    changeColor(hexToRgba(element.value));\r\n  }\r\n\r\n  handleClick() {\r\n    const { swapColors: swap } = this.props;\r\n    swap();\r\n  }\r\n\r\n  render() {\r\n    const { mainColor, secondColor } = this.props;\r\n    return (\r\n      <div className=\"color-bar\">\r\n        <input\r\n          className=\"color-bar__main-color\"\r\n          type=\"color\"\r\n          value={rgbaToHex(mainColor)}\r\n          onChange={this.handleChangeMainColor}\r\n        />\r\n        <input\r\n          className=\"color-bar__second-color\"\r\n          type=\"color\"\r\n          value={rgbaToHex(secondColor)}\r\n          onChange={this.handleChangeSecondColor}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"color-bar__button\"\r\n          onClick={this.handleClick}\r\n        >\r\n          {}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ mainColor, secondColor }) => ({ mainColor, secondColor });\r\n\r\nconst mapDispatchToProps = {\r\n  setMainColor,\r\n  setSecondColor,\r\n  swapColors,\r\n};\r\n\r\nColorBar.propTypes = {\r\n  setMainColor: PropTypes.func.isRequired,\r\n  setSecondColor: PropTypes.func.isRequired,\r\n  swapColors: PropTypes.func.isRequired,\r\n  mainColor: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  secondColor: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorBar);\r\n","import ColorBar from './ColorBar';\r\n\r\nexport default ColorBar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { setPenSize } from '../../redux/actions';\r\n\r\nimport './PenSizePanel.scss';\r\n\r\nclass PenSizePanel extends Component {\r\n  constructor() {\r\n    super();\r\n    this.penSizes = [1, 2, 3, 4];\r\n  }\r\n\r\n  render() {\r\n    const { penSizes } = this;\r\n    const { penSize, setPenSize: changePenSize } = this.props;\r\n    const penSizeItems = penSizes.map((size, index) => (\r\n      // eslint-disable-next-line react/no-array-index-key\r\n      <li key={index} className=\"pen-size-panel__item\">\r\n        <button\r\n          type=\"button\"\r\n          className={`pen-size-panel__button ${size === penSize ? 'pen-size-panel__button--active' : ''}`}\r\n          onClick={() => { changePenSize(size); }}\r\n        >\r\n          {size}\r\n        </button>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"pen-size-panel\">\r\n        <ul className=\"pen-size-panel__list\">\r\n          {penSizeItems}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPenSizePanel.propTypes = {\r\n  penSize: PropTypes.number.isRequired,\r\n  setPenSize: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ penSize }) => ({ penSize });\r\n\r\nexport default connect(mapStateToProps, { setPenSize })(PenSizePanel);\r\n","import PenSizePanel from './PenSizePanel';\r\n\r\nexport default PenSizePanel;\r\n","import {\r\n  isEqualPoint, drawPixels, getPointPosition, getLinePoints,\r\n} from '../utils/utils';\r\n\r\nconst eraseLine = (context, startPoint, canvasPosition, canvasState, setCanvasState, penSize) => {\r\n  const { pixelSize, size } = canvasState;\r\n  let point = startPoint;\r\n  let prevPoint = point;\r\n  const pointList = [point];\r\n  drawPixels(context, pointList, penSize);\r\n\r\n  const onMouseMove = ({ pageX, pageY }) => {\r\n    point = getPointPosition(pageX, pageY, pixelSize, canvasPosition);\r\n\r\n    if (!isEqualPoint(point, prevPoint)) {\r\n      const linePoints = getLinePoints(prevPoint, point);\r\n      drawPixels(context, linePoints, penSize);\r\n      prevPoint = point;\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    setCanvasState({ canvasState: context.getImageData(0, 0, size, size) });\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseup', onMouseUp);\r\n  };\r\n  document.addEventListener('mousemove', onMouseMove);\r\n  document.addEventListener('mouseup', onMouseUp);\r\n};\r\n\r\nexport default eraseLine;\r\n","import {\r\n  isEqualPoint, drawPixels, getPointPosition, getLinePoints,\r\n} from '../utils/utils';\r\n\r\nconst drawStrokeLine = (\r\n  mainContext, drawingContext, startPoint, canvasPosition, canvasState, setCanvasState, penSize,\r\n) => {\r\n  const { pixelSize, size } = canvasState;\r\n  let point = startPoint;\r\n  let prevPoint = point;\r\n  const pointList = [point];\r\n  drawPixels(drawingContext, pointList, penSize);\r\n  let linePoints = [];\r\n  const onMouseMove = ({ pageX, pageY }) => {\r\n    point = getPointPosition(pageX, pageY, pixelSize, canvasPosition);\r\n\r\n    if (!isEqualPoint(point, prevPoint)) {\r\n      drawingContext.clearRect(0, 0, size, size);\r\n      linePoints = getLinePoints(startPoint, point);\r\n      drawPixels(drawingContext, linePoints, penSize);\r\n      prevPoint = point;\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    drawingContext.clearRect(0, 0, size, size);\r\n    drawPixels(mainContext, linePoints, penSize);\r\n    setCanvasState({ canvasState: mainContext.getImageData(0, 0, size, size) });\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseup', onMouseUp);\r\n  };\r\n  document.addEventListener('mousemove', onMouseMove);\r\n  document.addEventListener('mouseup', onMouseUp);\r\n};\r\n\r\nexport default drawStrokeLine;\r\n","import {\r\n  isEqualPoint, clearPixels, getPointPosition, getLinePoints,\r\n} from '../utils/utils';\r\n\r\nconst eraseLine = (context, startPoint, canvasPosition, canvasState, setCanvasState, penSize) => {\r\n  const { pixelSize, size } = canvasState;\r\n  let point = startPoint;\r\n  let prevPoint = point;\r\n  const pointList = [point];\r\n  clearPixels(context, pointList, penSize);\r\n\r\n  const onMouseMove = ({ pageX, pageY }) => {\r\n    point = getPointPosition(pageX, pageY, pixelSize, canvasPosition);\r\n\r\n    if (!isEqualPoint(point, prevPoint)) {\r\n      const linePoints = getLinePoints(prevPoint, point);\r\n      clearPixels(context, linePoints, penSize);\r\n      prevPoint = point;\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    setCanvasState({ canvasState: context.getImageData(0, 0, size, size) });\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseup', onMouseUp);\r\n  };\r\n  document.addEventListener('mousemove', onMouseMove);\r\n  document.addEventListener('mouseup', onMouseUp);\r\n};\r\n\r\nexport default eraseLine;\r\n","import { getPixelColor } from '../utils/utils';\r\n\r\nconst getColor = (context, point, canvasState, changeMainColor) => {\r\n  const { size } = canvasState;\r\n  const frameState = context.getImageData(0, 0, size, size).data;\r\n  const selectedColor = getPixelColor(frameState, point, canvasState.size);\r\n  const isEmptyColor = selectedColor.every((color) => color === 0);\r\n  if (!isEmptyColor) {\r\n    changeMainColor(Array.from(selectedColor));\r\n  }\r\n};\r\n\r\nexport default getColor;\r\n","import {\r\n  fillAll, getPixelColor,\r\n} from '../utils/utils';\r\n\r\nconst fillAllPixels = (context, point, canvasState, changeCanvasState, newColor) => {\r\n  const { size } = canvasState;\r\n  const frameState = context.getImageData(0, 0, size, size).data;\r\n  const selectedColor = getPixelColor(frameState, point, canvasState.size);\r\n  if (selectedColor === newColor) return;\r\n  const newFrameState = fillAll(frameState, selectedColor, newColor);\r\n  const newImageData = new ImageData(newFrameState, size, size);\r\n  context.putImageData(newImageData, 0, 0, 0, 0, size, size);\r\n  changeCanvasState({ canvasState: newImageData });\r\n};\r\n\r\nexport default fillAllPixels;\r\n","import {\r\n  fillArea, getPixelColor,\r\n} from '../utils/utils';\r\n\r\nconst fill = (context, point, canvasState, changeCanvasState, newColor) => {\r\n  const { size } = canvasState;\r\n  const frameState = context.getImageData(0, 0, size, size).data;\r\n  const startColor = getPixelColor(frameState, point, canvasState.size);\r\n  if (startColor === newColor) return;\r\n  const newFrameState = fillArea(frameState, size, point, startColor, newColor);\r\n  const newImageData = new ImageData(newFrameState, size, size);\r\n  context.putImageData(newImageData, 0, 0, 0, 0, size, size);\r\n  changeCanvasState({ canvasState: newImageData });\r\n};\r\n\r\nexport default fill;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  getPointPosition, rgbaToHex, drawFrame, clearCanvas,\r\n} from '../../utils/utils';\r\nimport { setCanvasState, setMainColor } from '../../redux/actions';\r\nimport drawLine from '../../tools/drawLine';\r\nimport drawStrokeLine from '../../tools/drawStrokeLine';\r\nimport eraseLine from '../../tools/eraseLine';\r\nimport getColor from '../../tools/getColor';\r\nimport fillAllPixels from '../../tools/fillAllPixels';\r\nimport fill from '../../tools/fill';\r\n\r\nimport './Canvas.scss';\r\n\r\nclass Canvas extends Component {\r\n  constructor() {\r\n    super();\r\n    this.mainCanvasRef = React.createRef();\r\n    this.drawingCanvasRef = React.createRef();\r\n    this.mainCanvas = null;\r\n    this.drawingCanvas = null;\r\n    this.mainContext = null;\r\n    this.drawingContext = null;\r\n    this.screen = null;\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mainCanvas = this.mainCanvasRef.current;\r\n    this.mainContext = this.mainCanvas.getContext('2d');\r\n    this.drawingCanvas = this.drawingCanvasRef.current;\r\n    this.drawingContext = this.drawingCanvas.getContext('2d');\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const { currentFrame, frames, canvas } = this.props;\r\n    const { currentFrame: nextCurrentFrame, frames: nextFrames, canvas: newCanvas } = nextProps;\r\n    if (currentFrame !== nextCurrentFrame || frames.length !== nextFrames.length\r\n      || canvas !== newCanvas) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { frames, currentFrame, canvas } = this.props;\r\n    const { size } = canvas;\r\n    const frame = frames[currentFrame];\r\n    clearCanvas(this.mainContext, size);\r\n    if (frame) {\r\n      drawFrame(this.mainContext, frame, size);\r\n    }\r\n  }\r\n\r\n  handleMouseDown(event) {\r\n    const {\r\n      mainColor, currentTool, canvas, setCanvasState: changeCanvasState,\r\n      penSize, setMainColor: changeMainColor, secondColor,\r\n    } = this.props;\r\n    event.preventDefault();\r\n    if (currentTool === '') return;\r\n    const { pageX, pageY } = event;\r\n    const canvasPosition = this.mainCanvas.getBoundingClientRect();\r\n    const MOUSE_KEYS = {\r\n      LEFT: 0,\r\n      RIGHT: 2,\r\n    };\r\n    const color = MOUSE_KEYS.RIGHT === event.button ? secondColor : mainColor;\r\n    this.mainContext.fillStyle = rgbaToHex(color);\r\n    this.drawingContext.fillStyle = rgbaToHex(color);\r\n    const point = getPointPosition(pageX, pageY, canvas.pixelSize, canvasPosition);\r\n    switch (currentTool) {\r\n      case 'pen':\r\n        drawLine(this.mainContext, point, canvasPosition, canvas, changeCanvasState, penSize);\r\n        break;\r\n      case 'line':\r\n        drawStrokeLine(\r\n          this.mainContext,\r\n          this.drawingContext,\r\n          point, canvasPosition,\r\n          canvas,\r\n          changeCanvasState,\r\n          penSize,\r\n        );\r\n        break;\r\n      case 'eraser':\r\n        eraseLine(this.mainContext, point, canvasPosition, canvas, changeCanvasState, penSize);\r\n        break;\r\n      case 'pipette':\r\n        getColor(this.mainContext, point, canvas, changeMainColor);\r\n        break;\r\n      case 'fill-all':\r\n        fillAllPixels(this.mainContext, point, canvas, changeCanvasState, color);\r\n        break;\r\n      case 'fill':\r\n        fill(this.mainContext, point, canvas, changeCanvasState, color);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { canvas: { size } } = this.props;\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n      <div\r\n        className=\"canvas\"\r\n        id=\"screen\"\r\n        onMouseDown={this.handleMouseDown}\r\n        ref={this.myRef}\r\n        onContextMenu={(event) => event.preventDefault()}\r\n      >\r\n        <canvas\r\n          className=\"canvas__main\"\r\n          ref={this.mainCanvasRef}\r\n          width={size}\r\n          height={size}\r\n        />\r\n        <canvas\r\n          className=\"canvas__drawing\"\r\n          ref={this.drawingCanvasRef}\r\n          width={size}\r\n          height={size}\r\n        />\r\n        <div className=\"canvas__background\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  mainColor, currentTool, canvas, currentFrame, frames, penSize, secondColor,\r\n}) => ({\r\n  mainColor, currentTool, canvas, currentFrame, frames, penSize, secondColor,\r\n});\r\n\r\nconst mapDispatchToProps = { setCanvasState, setMainColor };\r\n\r\nCanvas.propTypes = {\r\n  mainColor: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  secondColor: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  currentTool: PropTypes.string.isRequired,\r\n  currentFrame: PropTypes.number.isRequired,\r\n  frames: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  canvas: PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    pixelSize: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  setCanvasState: PropTypes.func.isRequired,\r\n  setMainColor: PropTypes.func.isRequired,\r\n  penSize: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\r\n","import Canvas from './Canvas';\r\n\r\nexport default Canvas;\r\n","import Frame from './Frame';\r\n\r\nexport default Frame;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { drawFrame } from '../../utils/utils';\r\n\r\nimport './Frame.scss';\r\n\r\nclass Frame extends Component {\r\n  constructor() {\r\n    super();\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { image, size } = this.props;\r\n    if (image) {\r\n      const context = this.myRef.current.getContext('2d');\r\n      drawFrame(context, image, size);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { image, size } = this.props;\r\n    if (image) {\r\n      const context = this.myRef.current.getContext('2d');\r\n      drawFrame(context, image, size);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentFrame, length, index, size, onDelete, onChange, onCopy,\r\n    } = this.props;\r\n    return (\r\n      <div className={`frame ${currentFrame === index && 'frame--active'}`}>\r\n        <button className=\"frame__body\" type=\"button\" onClick={() => onChange(index)}>\r\n          <canvas className=\"frame__canvas\" id=\"canvas\" width={size} height={size} ref={this.myRef} />\r\n        </button>\r\n        <p className=\"frame__index\">{index + 1}</p>\r\n        {length > 1\r\n          && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"frame__button frame__button--delete\"\r\n              onClick={() => onDelete(index)}\r\n            >\r\n              {}\r\n            </button>\r\n          )}\r\n        <button\r\n          type=\"button\"\r\n          className=\"frame__button frame__button--copy\"\r\n          onClick={() => onCopy(index)}\r\n        >\r\n          {}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFrame.propTypes = {\r\n  currentFrame: PropTypes.number.isRequired,\r\n  size: PropTypes.number.isRequired,\r\n  length: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  image: PropTypes.shape().isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onCopy: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Frame;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { createInitialFrameState } from '../../utils/utils';\r\nimport Frame from '../Frame';\r\nimport {\r\n  addFrame, setCurrentFrame, deleteFrame, copyFrame, swapFrame,\r\n} from '../../redux/actions';\r\n\r\n\r\nimport './Frames.scss';\r\n\r\nclass Frames extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const { addFrame: onAddFrame, canvas: { size } } = this.props;\r\n    const frameInitialState = createInitialFrameState(size);\r\n    onAddFrame(frameInitialState);\r\n  }\r\n\r\n  handleMouseDown(event) {\r\n    const { swapFrame: swap } = this.props;\r\n    const dragElement = event.target.parentNode;\r\n    dragElement.style.zIndex = '9999';\r\n    const index1 = +dragElement.dataset.index;\r\n    const startY = event.pageY;\r\n\r\n    const handleMouseMove = (mouseMoveEvent) => {\r\n      dragElement.style.transform = `translateY(${mouseMoveEvent.pageY - startY}px)`;\r\n    };\r\n\r\n    const handleMouseUp = (mouseUpEvent) => {\r\n      dragElement.hidden = true;\r\n      let element = document.elementFromPoint(mouseUpEvent.clientX, mouseUpEvent.clientY);\r\n      dragElement.hidden = false;\r\n      while (element.classList) {\r\n        if (element.classList.contains('frames__drag')) {\r\n          const index2 = +element.dataset.index;\r\n          if (index2 !== index1) {\r\n            swap(index1, index2);\r\n          }\r\n          break;\r\n        }\r\n        element = element.parentNode;\r\n      }\r\n      dragElement.style.transform = 'translateY(0px)';\r\n      dragElement.style.zIndex = '1';\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      frames, canvas: { size }, currentFrame, setCurrentFrame: changeCurrentFrame,\r\n      deleteFrame: onDeleteFrame, copyFrame: onCopyFrame,\r\n    } = this.props;\r\n    const listFrames = frames.map((frame, index) => (\r\n      // eslint-disable-next-line react/no-array-index-key\r\n      <li className=\"frames__item\" key={index}>\r\n        <div\r\n          className=\"frames__drag\"\r\n          onMouseEnter={this.handleMouseEnter}\r\n          onMouseLeave={this.handleMouseLeave}\r\n          data-index={index}\r\n        >\r\n          <Frame\r\n            size={size}\r\n            currentFrame={currentFrame}\r\n            length={frames.length}\r\n            index={index}\r\n            image={frame}\r\n            onDelete={onDeleteFrame}\r\n            onChange={changeCurrentFrame}\r\n            onCopy={onCopyFrame}\r\n          />\r\n          <button\r\n            className=\"frames__drag-button\"\r\n            type=\"button\"\r\n            onMouseDown={this.handleMouseDown}\r\n          >\r\n            {}\r\n          </button>\r\n        </div>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"frames\">\r\n        <ul className=\"frames__list\">\r\n          {listFrames}\r\n        </ul>\r\n        <button\r\n          type=\"button\"\r\n          className=\"frames__button\"\r\n          onClick={this.handleClick}\r\n        >\r\n          Add new frame\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ frames, currentFrame, canvas }) => ({ frames, currentFrame, canvas });\r\n\r\nconst mapDispatchToProps = {\r\n  addFrame,\r\n  setCurrentFrame,\r\n  deleteFrame,\r\n  copyFrame,\r\n  swapFrame,\r\n};\r\n\r\nFrames.propTypes = {\r\n  currentFrame: PropTypes.number.isRequired,\r\n  canvas: PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    pixelSize: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  frames: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  addFrame: PropTypes.func.isRequired,\r\n  setCurrentFrame: PropTypes.func.isRequired,\r\n  deleteFrame: PropTypes.func.isRequired,\r\n  copyFrame: PropTypes.func.isRequired,\r\n  swapFrame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Frames);\r\n","import Frames from './Frames';\r\n\r\nexport default Frames;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { setFrameRate, togglePreviewFullscreen } from '../../redux/actions';\r\nimport { createInterval, drawFrame, clearCanvas } from '../../utils/utils';\r\n\r\nimport './Preview.scss';\r\nimport icon from './images/full-screen.svg';\r\n\r\n\r\nclass Preview extends Component {\r\n  constructor() {\r\n    super();\r\n    this.canvasRef = React.createRef();\r\n    this.context = null;\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.showAnimation = this.showAnimation.bind(this);\r\n    this.previewInterval = createInterval(this.showAnimation);\r\n    this.activeFrame = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.context = this.canvasRef.current.getContext('2d');\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    const { frameRate } = this.props;\r\n    const { frameRate: nextFrameRate } = nextProps;\r\n    const MILLISECONDS_PER_SECOND = 1000;\r\n    if (frameRate !== nextFrameRate) {\r\n      this.previewInterval.clear();\r\n      if (frameRate !== 0) {\r\n        const time = MILLISECONDS_PER_SECOND / frameRate;\r\n        this.previewInterval.start(time);\r\n      } else {\r\n        this.drawFrame();\r\n      }\r\n    }\r\n    this.drawFrame();\r\n  }\r\n\r\n  showAnimation() {\r\n    const { frames, size } = this.props;\r\n    const { length } = frames;\r\n    const { activeFrame } = this;\r\n    const frame = frames[activeFrame];\r\n    const context = this.canvasRef.current.getContext('2d');\r\n    clearCanvas(context, size);\r\n    if (frame) {\r\n      drawFrame(context, frame, size);\r\n    }\r\n    this.activeFrame = (this.activeFrame + 1 + length) % length;\r\n  }\r\n\r\n  drawFrame() {\r\n    const { frames, currentFrame, size } = this.props;\r\n    const context = this.canvasRef.current.getContext('2d');\r\n    const frame = frames[currentFrame];\r\n    clearCanvas(context, size);\r\n    if (frame) {\r\n      drawFrame(context, frame, size);\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { setFrameRate: changeFrameRate } = this.props;\r\n    changeFrameRate(+event.target.value);\r\n  }\r\n\r\n  handleClick() {\r\n    const { togglePreviewFullscreen: toggleFullscreen } = this.props;\r\n    toggleFullscreen(true);\r\n  }\r\n\r\n  render() {\r\n    const { frameRate, size } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"preview\">\r\n          <canvas className=\"preview__canvas\" width={size} height={size} ref={this.canvasRef} />\r\n          <div className=\"preview__background\" />\r\n          <button className=\"preview__button\" type=\"button\" onClick={this.handleClick}>\r\n            <img className=\"preview__icon\" src={icon} alt=\"full-screen\" />\r\n          </button>\r\n          <div className=\"preview__control\">\r\n            <p className=\"preview__value\">{frameRate}</p>\r\n            <input\r\n              type=\"range\"\r\n              value={frameRate}\r\n              min=\"0\"\r\n              max=\"24\"\r\n              step=\"1\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  frames, frameRate, currentFrame, canvas: { size },\r\n}) => (\r\n  {\r\n    frames, frameRate, currentFrame, size,\r\n  }\r\n);\r\n\r\nconst mapDispatchToProps = { setFrameRate, togglePreviewFullscreen };\r\n\r\nPreview.propTypes = {\r\n  frames: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  frameRate: PropTypes.number.isRequired,\r\n  currentFrame: PropTypes.number.isRequired,\r\n  size: PropTypes.number.isRequired,\r\n  setFrameRate: PropTypes.func.isRequired,\r\n  togglePreviewFullscreen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Preview);\r\n","import Preview from './Preview';\r\n\r\nexport default Preview;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { togglePreviewFullscreen } from '../../redux/actions';\r\nimport { createInterval, drawFrame, clearCanvas } from '../../utils/utils';\r\n\r\nimport './PreviewFullscreen.scss';\r\n\r\nclass PreviewFullscreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.canvasRef = React.createRef();\r\n    this.fullScrennRef = React.createRef();\r\n    this.context = null;\r\n    this.showAnimation = this.showAnimation.bind(this);\r\n    this.handleFullScreenChange = this.handleFullScreenChange.bind(this);\r\n    this.previewInterval = createInterval(this.showAnimation);\r\n    this.activeFrame = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.context = this.canvasRef.current.getContext('2d');\r\n    document.addEventListener('fullscreenchange', this.handleFullScreenChange);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isOpenFullscreen } = this.props;\r\n    const MILLISECONDS_PER_SECOND = 1000;\r\n    if (isOpenFullscreen) {\r\n      const fullScreen = this.fullScrennRef.current;\r\n      fullScreen.requestFullscreen();\r\n      const { frameRate } = this.props;\r\n      if (frameRate !== 0) {\r\n        const time = MILLISECONDS_PER_SECOND / frameRate;\r\n        this.previewInterval.start(time);\r\n      } else {\r\n        this.drawFrame();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFullScreenChange() {\r\n    if (!document.fullscreenElement) {\r\n      const { togglePreviewFullscreen: toggleFullscreen } = this.props;\r\n      this.previewInterval.clear();\r\n      toggleFullscreen(false);\r\n    }\r\n  }\r\n\r\n  showAnimation() {\r\n    const { frames, canvas: { size } } = this.props;\r\n    const { length } = frames;\r\n    const { activeFrame } = this;\r\n    const frame = frames[activeFrame];\r\n    const context = this.canvasRef.current.getContext('2d');\r\n    clearCanvas(context, size);\r\n    if (frame) {\r\n      drawFrame(context, frame, size);\r\n    }\r\n    this.activeFrame = (this.activeFrame + 1 + length) % length;\r\n  }\r\n\r\n  drawFrame() {\r\n    const { frames, currentFrame, canvas: { size } } = this.props;\r\n    const context = this.canvasRef.current.getContext('2d');\r\n    const frame = frames[currentFrame];\r\n    clearCanvas(context, size);\r\n    if (frame) {\r\n      drawFrame(context, frame, size);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { canvas: { size }, isOpenFullscreen } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={`preview-fullscreen ${isOpenFullscreen ? 'preview-fullscreen--active' : ''}`}\r\n        ref={this.fullScrennRef}\r\n      >\r\n        <div className=\"preview-fullscreen__body\">\r\n          <canvas className=\"preview-fullscreen__canvas\" width={size} height={size} ref={this.canvasRef} />\r\n          <div className=\"preview-fullscreen__background\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  frames, frameRate, currentFrame, canvas, isOpenFullscreen,\r\n}) => (\r\n  {\r\n    frames, frameRate, currentFrame, canvas, isOpenFullscreen,\r\n  }\r\n);\r\n\r\nconst mapDispatchToProps = { togglePreviewFullscreen };\r\n\r\nPreviewFullscreen.propTypes = {\r\n  frames: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  frameRate: PropTypes.number.isRequired,\r\n  currentFrame: PropTypes.number.isRequired,\r\n  canvas: PropTypes.shape().isRequired,\r\n  isOpenFullscreen: PropTypes.bool.isRequired,\r\n  togglePreviewFullscreen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PreviewFullscreen);\r\n","import PreviewFullscreen from './PreviewFullscreen';\r\n\r\nexport default PreviewFullscreen;\r\n","import saveFile from 'save-file';\r\nimport Gif from 'gif.js-upgrade/dist/gif';\r\n\r\nimport { clearCanvas, drawFrame } from '../utils/utils';\r\n\r\nconst getDataUrls = (frames, size) => {\r\n  const canvas = document.createElement('canvas');\r\n  canvas.height = size;\r\n  canvas.width = size;\r\n  const context = canvas.getContext('2d');\r\n  return frames.map((frame) => {\r\n    clearCanvas(context, size);\r\n    drawFrame(context, frame, size);\r\n    return (canvas.toDataURL());\r\n  });\r\n};\r\n\r\nconst saveAsGif = (\r\n  frames, size, interval = 300, fileName = 'animation',\r\n) => {\r\n  const dataUrls = getDataUrls(frames, size);\r\n\r\n  const gif = new Gif({\r\n    workers: 2,\r\n    quality: 10,\r\n    background: '#ffffff',\r\n    width: size,\r\n    height: size,\r\n  });\r\n\r\n  dataUrls.forEach((frame) => {\r\n    const image = new Image(size, size);\r\n    image.src = frame;\r\n    gif.addFrame(image, { delay: interval });\r\n  });\r\n\r\n  gif.on('finished', (blob) => {\r\n    saveFile(blob, `${fileName}`);\r\n  });\r\n\r\n  gif.render();\r\n};\r\n\r\nexport default saveAsGif;\r\n","import UPNG from 'upng-js';\r\nimport saveFile from 'save-file';\r\n\r\nimport { clearCanvas, drawFrame } from '../utils/utils';\r\n\r\nconst getArrayBuffers = (layer, size) => {\r\n  const canvas = document.createElement('canvas');\r\n  canvas.height = size;\r\n  canvas.width = size;\r\n  const context = canvas.getContext('2d');\r\n  return layer.map((frame) => {\r\n    clearCanvas(context, size);\r\n    drawFrame(context, frame, size);\r\n    return context.getImageData(0, 0, size, size).data.buffer;\r\n  });\r\n};\r\n\r\nconst getIntervals = (layer, interval) => layer.map(() => interval * 1000);\r\n\r\nconst saveAsApng = (layer, size, interval = 300, fileName = 'animation') => {\r\n  const arrayBuffers = getArrayBuffers(layer, size);\r\n  const intervals = getIntervals(layer, interval);\r\n  const arr = UPNG.encode(arrayBuffers, size, size, 0, intervals);\r\n  saveFile(arr, `${fileName}.apng`);\r\n};\r\n\r\nexport default saveAsApng;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport saveAsGif from '../../services/saveAsGif';\r\nimport saveAsApng from '../../services/saveAsApng';\r\nimport './ExportMenu.scss';\r\n\r\nclass ExportMenu extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: 'New Piskel',\r\n    };\r\n    this.handleClickOnGifButton = this.handleClickOnGifButton.bind(this);\r\n    this.handleClickOnApngButton = this.handleClickOnApngButton.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleClickOnGifButton() {\r\n    const { frames, size, frameRate } = this.props;\r\n    const { value: fileName } = this.state;\r\n    saveAsGif(frames, size, frameRate, fileName);\r\n  }\r\n\r\n  handleClickOnApngButton() {\r\n    const { frames, size, frameRate } = this.props;\r\n    const { value: fileName } = this.state;\r\n    saveAsApng(frames, size, frameRate, fileName);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div className=\"export-menu\">\r\n        <p className=\"export-menu__title\">Export as:</p>\r\n        <input className=\"export-menu__input\" type=\"text\" value={value} onChange={this.handleChange} />\r\n        <div className=\"export-menu__button-group\">\r\n          <button\r\n            className=\"export-menu__button\"\r\n            type=\"button\"\r\n            onClick={this.handleClickOnGifButton}\r\n          >\r\n            gif\r\n          </button>\r\n          <button\r\n            className=\"export-menu__button\"\r\n            type=\"button\"\r\n            onClick={this.handleClickOnApngButton}\r\n          >\r\n            apng\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ frames, frameRate, canvas: { size } }) => ({ frames, frameRate, size });\r\n\r\nExportMenu.propTypes = {\r\n  frames: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  frameRate: PropTypes.number.isRequired,\r\n  size: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(ExportMenu);\r\n","import ExportMenu from './ExportMenu';\r\n\r\nexport default ExportMenu;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ handleClick, children, isActive = false }) => (\r\n  <button\r\n    className={`button ${isActive ? 'button--active' : ''}`}\r\n    type=\"button\"\r\n    onClick={handleClick}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  isActive: PropTypes.bool.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../Button';\r\nimport { setSize } from '../../redux/actions';\r\n\r\nimport './ResizeMenu.scss';\r\n\r\nconst CANVAS_RESOLUTION = {\r\n  LOW: 32,\r\n  NORMAL: 64,\r\n  HIGH: 128,\r\n};\r\n\r\nconst ResizeMenu = ({ size, setSize: resize }) => (\r\n  <div className=\"resize-menu\">\r\n    <Button\r\n      isActive={size === CANVAS_RESOLUTION.LOW}\r\n      handleClick={() => resize(CANVAS_RESOLUTION.LOW)}\r\n    >\r\n      32\r\n    </Button>\r\n    <Button\r\n      isActive={size === CANVAS_RESOLUTION.NORMAL}\r\n      handleClick={() => resize(CANVAS_RESOLUTION.NORMAL)}\r\n    >\r\n      64\r\n    </Button>\r\n    <Button\r\n      isActive={size === CANVAS_RESOLUTION.HIGH}\r\n      handleClick={() => resize(CANVAS_RESOLUTION.HIGH)}\r\n    >\r\n      128\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = ({ canvas: { size } }) => ({ size });\r\n\r\nconst mapDispatchToProps = {\r\n  setSize,\r\n};\r\n\r\nResizeMenu.propTypes = {\r\n  size: PropTypes.number.isRequired,\r\n  setSize: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResizeMenu);\r\n","import ResizeMenu from './ResizeMenu';\r\n\r\nexport default ResizeMenu;\r\n","import Main from './Main';\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport ToolBar from '../ToolBar';\r\nimport ColorBar from '../ColorBar';\r\nimport PenSizePanel from '../PenSizePanel';\r\nimport Canvas from '../Canvas';\r\nimport Frames from '../Frames';\r\nimport Preview from '../Preview';\r\nimport PreviewFullscreen from '../PreviewFullscreen';\r\nimport ExportMenu from '../ExportMenu';\r\nimport ResizeMenu from '../ResizeMenu';\r\n\r\nimport './Main.scss';\r\n\r\nconst Main = () => (\r\n  <main className=\"main\">\r\n    <div className=\"main__left-menu\">\r\n      <PenSizePanel />\r\n      <ToolBar />\r\n      <ColorBar />\r\n    </div>\r\n    <div className=\"main__frames\">\r\n      <Frames />\r\n    </div>\r\n    <div className=\"main__canvas\">\r\n      <Canvas />\r\n    </div>\r\n    <div className=\"main__right-menu\">\r\n      <Preview />\r\n      <PreviewFullscreen />\r\n      <ExportMenu />\r\n      <ResizeMenu />\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","import Landing from './Landing';\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport screen from './images/screen.jpg';\r\nimport animation1 from './images/animation1.gif';\r\nimport animation2 from './images/animation2.gif';\r\nimport animation3 from './images/animation3.gif';\r\nimport animation4 from './images/animation4.gif';\r\nimport animation5 from './images/animation5.gif';\r\n\r\nimport './Landing.scss';\r\n\r\n\r\nconst Landing = () => (\r\n  <main className=\"landing-page\">\r\n    <div className=\"landing-page__wrap\">\r\n      <div className=\"landing-page__preview\">\r\n        <div className=\"landing-page__info\">\r\n          <h1 className=\"landing-page__title\">\r\n            Piskel is a free online editor for animated sprites & pixel art\r\n          </h1>\r\n          <Link to=\"/create\" className=\"landing-page__button\">Create Sprite</Link>\r\n        </div>\r\n        <img className=\"landing-page__screen\" src={screen} alt=\"piskel-clone\" />\r\n      </div>\r\n      <div className=\"landing-page__animation animation\">\r\n        <div>\r\n          <p className=\"animation__title\">Animation examples</p>\r\n          <ul className=\"animation__list\">\r\n            <li className=\"animation__item\">\r\n              <img className=\"animation__image\" src={animation1} alt=\"animation\" />\r\n            </li>\r\n            <li className=\"animation__item\">\r\n              <img className=\"animation__image\" src={animation2} alt=\"animation\" />\r\n            </li>\r\n            <li className=\"animation__item\">\r\n              <img className=\"animation__image\" src={animation3} alt=\"animation\" />\r\n            </li>\r\n            <li className=\"animation__item\">\r\n              <img className=\"animation__image\" src={animation4} alt=\"animation\" />\r\n            </li>\r\n            <li className=\"animation__item\">\r\n              <img className=\"animation__image\" src={animation5} alt=\"animation\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"landing-page__functionality\">\r\n        <div>\r\n          <p className=\"functionality__title\">Available functionality</p>\r\n          <ul className=\"functionality__list\">\r\n            <li className=\"functionality__item functionality__item--tools\">Support 6 tools</li>\r\n            <li className=\"functionality__item functionality__item--maximize\">Support three canvas size</li>\r\n            <li className=\"functionality__item functionality__item--export\">Export as GIF and APNG</li>\r\n            <li className=\"functionality__item functionality__item--google\">Google authentication</li>\r\n            <li className=\"functionality__item functionality__item--preview\">Live preview</li>\r\n            <li className=\"functionality__item functionality__item--save\">Saving session</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <p className=\"landing-page__copyright\">© Copyright 2019 by Mukhin Anton</p>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default Landing;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Header from '../Header';\nimport Main from '../Main';\nimport Landing from '../Landing';\n\nimport './App.scss';\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/create\">\n          <Main />\n        </Route>\n        <Route path=\"/\">\n          <Landing />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport App from './components/App';\n\nimport './index.scss';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}